name: Build INAV SpeedyBee F405 Wing Optimized

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build python3 git

      - name: Download ARM GCC Toolchain
        run: |
          wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz
          tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz
          echo "$PWD/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin" >> $GITHUB_PATH

      - name: Configure with size optimization
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_TOOLCHAIN_FILE=cmake/arm-none-eabi.cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DTARGET=SPEEDYBEEF405WING_for_bl \
            -DCMAKE_C_FLAGS="-Os -g0 -flto -ffunction-sections -fdata-sections -fno-unwind-tables -fno-asynchronous-unwind-tables -fno-stack-protector" \
            -DCMAKE_EXE_LINKER_FLAGS="-Wl,--gc-sections -Wl,--strip-all"

      - name: Build firmware
        run: cmake --build build --target SPEEDYBEEF405WING_for_bl.elf -j$(nproc)

      - name: Convert ELF to HEX
        run: arm-none-eabi-objcopy -O ihex build/bin/SPEEDYBEEF405WING_for_bl.elf build/inav_SPEEDYBEEF405WING_for_bl.hex

      - name: Convert ELF to BIN
        run: arm-none-eabi-objcopy -O binary build/bin/SPEEDYBEEF405WING_for_bl.elf build/inav_SPEEDYBEEF405WING_for_bl.bin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: speedybee-f405wing-optimized
          path: |
            build/inav_SPEEDYBEEF405WING_for_bl.hex
            build/inav_SPEEDYBEEF405WING_for_bl.bin
